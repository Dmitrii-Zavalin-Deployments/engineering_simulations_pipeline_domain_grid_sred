name: Fluid Data Processing and Commit

on:
  push:
    branches:
      - "**"  # Runs on any branch
  workflow_dispatch:

jobs:
  process_fluid_data:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]  # Tests multiple Python versions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Verify requirements.txt exists
        run: |
          if [ ! -f "$GITHUB_WORKSPACE/requirements.txt" ]; then
            echo "❌ Error: requirements.txt not found!"
            exit 1
          fi

      - name: Install system dependencies (OpenVDB, TBB)
        run: |
          sudo apt-get update
          sudo apt-get install -y libopenvdb-dev libtbb-dev

      - name: Install Python dependencies
        run: bash "$GITHUB_WORKSPACE/install_dependencies.sh"

      - name: Check PyOpenVDB availability
        run: |
          pip search pyopenvdb || echo "⚠️ PyOpenVDB not found on PyPI"

      - name: Debug Dependencies
        run: bash "$GITHUB_WORKSPACE/debug_dependencies.sh"

      - name: Install PyOpenVDB via Conda (if necessary)
        run: |
          if ! pip show pyopenvdb; then
            conda install -c conda-forge pyopenvdb || echo "⚠️ Conda installation failed"
          fi

      - name: Run fluid data processing script
        run: python "$GITHUB_WORKSPACE/src/generate_blender_format.py"

      - name: Run tests
        run: pytest tests --verbose || echo "⚠️ Some tests failed, but workflow continues."

      - name: Commit changes (Blender Fluid Parameters)
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config --global user.name "${GIT_USER_NAME}"
          git config --global user.email "${GIT_USER_EMAIL}"

          cd "$GITHUB_WORKSPACE"
          if [ -f "data/testing-input-output/blender_fluid_parameters.json" ]; then
            git add "data/testing-input-output/blender_fluid_parameters.json"
            git commit -m "Auto-update: Added latest Blender fluid parameters"
            git push origin HEAD
          fi



