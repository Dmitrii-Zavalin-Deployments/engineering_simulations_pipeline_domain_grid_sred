name: Fluid Simulation Data Pipeline

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  process_fluid_data:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: ⬆️ Upgrade pip
        run: python -m pip install --upgrade pip

      - name: 🧱 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libtbb-dev

      - name: 📦 Install Python dependencies from requirements.txt
        run: |
          pip install -r requirements.txt

      - name: 🧹 Clear simulation output artifacts
        run: |
          rm -rf "$GITHUB_WORKSPACE/data/testing-input-output/"*
          echo "✅ Output directories cleaned"

      - name: ✅ Make download script executable
        run: chmod +x src/download_from_dropbox.sh

      - name: ☁️ Download simulation files from Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/download_from_dropbox.sh

      - name: 🚀 Run enrichment pipeline
        env:
          IO_DIRECTORY: ${{ github.workspace }}/data/testing-input-output
        run: python "$GITHUB_WORKSPACE/src/run_pipeline.py"

      - name: 🔍 Validate output JSON against schema
        env:
          PYTHONPATH: "${{ github.workspace }}/src"
        run: |
          python -c "
          import json, jsonschema
          from pathlib import Path
          output_path = Path('data/testing-input-output/enriched_metadata.json')
          if not output_path.exists():
              raise FileNotFoundError(f'Schema validation failed — file not found: {output_path}')
          with open('schemas/domain_schema.json') as s, open(output_path) as d:
              schema = json.load(s)
              data = json.load(d)
              jsonschema.validate(instance=data, schema=schema)
          "
          echo "✅ Output schema validated"

      - name: 🔬 Run test suite (unit + integration + edge guards)
        env:
          PYTHONPATH: "${{ github.workspace }}/src"
        run: |
          pytest -s tests/ --verbose -ra
          echo "✅ Unit tests completed"

      - name: 🧭 Debug directory tree
        run: ls -R $GITHUB_WORKSPACE

      - name: ✅ Make upload script executable
        run: chmod +x src/upload_to_dropbox.sh

      - name: ☁️ Upload outputs to Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/upload_to_dropbox.sh



