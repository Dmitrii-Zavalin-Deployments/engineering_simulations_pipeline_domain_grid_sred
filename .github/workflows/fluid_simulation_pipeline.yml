name: Fluid Simulation Data Pipeline

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  process_fluid_data:
    runs-on: ubuntu-latest

    steps:
      - name: üõéÔ∏è Checkout repository
        uses: actions/checkout@v3

      - name: üì¶ Install libfuse2 (for AppImage support)
        run: sudo apt-get install -y libfuse2

      - name: üß± Install system dependencies (incl. Qt platform support)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libtbb-dev \
            libgl1-mesa-dev \
            libxmu-dev \
            libxi-dev \
            libglu1-mesa-dev \
            freeglut3-dev \
            libfreetype6-dev \
            libfontconfig1-dev \
            libxcb-xinerama0 \
            libxcb1 \
            libx11-xcb1 \
            libxrender1 \
            libxtst6

      - name: üõí Download FreeCAD AppImage
        run: |
          wget https://github.com/FreeCAD/FreeCAD/releases/download/0.21.2/FreeCAD-0.21.2-Linux-x86_64.AppImage -O FreeCAD.AppImage
          chmod +x FreeCAD.AppImage

      - name: üßπ Clear simulation output artifacts
        run: |
          rm -rf "$GITHUB_WORKSPACE/data/testing-input-output/"*
          echo "‚úÖ Output directories cleaned"

      - name: ‚úÖ Make download script executable
        run: chmod +x src/download_from_dropbox.sh

      - name: ‚òÅÔ∏è Download simulation files from Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/download_from_dropbox.sh

      - name: üöÄ Run enrichment pipeline (FreeCAD AppImage - Qt offscreen)
        continue-on-error: true
        env:
          QT_QPA_PLATFORM: offscreen
        run: ./FreeCAD.AppImage --console src/run_pipeline.py --resolution 0.01

      - name: üõí Extract FreeCAD AppImage (fallback if FUSE fails)
        if: failure()
        run: |
          ./FreeCAD.AppImage --appimage-extract
          chmod +x squashfs-root/AppRun

      - name: üöÄ Run enrichment pipeline (FUSE-free mode fallback - Qt offscreen)
        if: failure()
        env:
          QT_QPA_PLATFORM: offscreen
        run: squashfs-root/AppRun --console src/run_pipeline.py --resolution 0.01

      - name: üîç Validate output JSON against schema
        env:
          PYTHONPATH: "${{ github.workspace }}/src"
        run: |
          python -c "
          import json, jsonschema
          from pathlib import Path
          output_path = Path('data/testing-input-output/enriched_metadata.json')
          if not output_path.exists():
              raise FileNotFoundError(f'Schema validation failed ‚Äî file not found: {output_path}')
          with open('schemas/domain_schema.json') as s, open(output_path) as d:
              schema = json.load(s)
              data = json.load(d)
              jsonschema.validate(instance=data, schema=schema)
          "
          echo "‚úÖ Output schema validated"

      - name: üî¨ Run test suite (unit + integration + edge guards)
        env:
          PYTHONPATH: "${{ github.workspace }}/src"
        run: python -m pytest -s tests/ --verbose -ra

      - name: üß≠ Debug directory tree
        run: ls -R $GITHUB_WORKSPACE

      - name: ‚úÖ Make upload script executable
        run: chmod +x src/upload_to_dropbox.sh

      - name: ‚òÅÔ∏è Upload outputs to Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/upload_to_dropbox.sh



